#!/usr/bin/env zsh

# --- Check if gum is installed ---
if ! command -v gum &> /dev/null; then
    echo "Error: gum is not installed." >&2
    echo "Please install it: https://github.com/charmbracelet/gum" >&2
    exit 1
fi

# --- Check if jq is installed ---
if ! command -v jq &> /dev/null; then
    echo "Error: jq is not installed." >&2
    echo "Please install it (e.g., 'sudo apt install jq' or 'brew install jq')" >&2
    exit 1
fi

# --- Define colors ---
QUOTE_COLOR="#FFC600"
AUTHOR_COLOR="#EE80E1"

# --- Functions ---
fetch_quote() {
  local api_url="https://zenquotes.io/api/random"
  local quote_path=".[0].q"
  local author_path=".[0].a"

  # --- Define our "Gemini-like" loading messages ---
  declare -a loading_messages=(
      "Consulting the philosophers..."
      "Searching the ancient libraries..."
      "Polishing some wisdom..."
      "Finding the perfect words..."
      "Asking the universe for a sign..."
      "Rummaging through the archives..."
  )

  # Get a random message from the list
  RANDOM_INDEX=$(( (RANDOM % ${#loading_messages[@]}) + 1 ))
  RANDOM_MESSAGE=${loading_messages[$RANDOM_INDEX]}
  temp_file=$(mktemp)
  gum spin --spinner dot --title "$RANDOM_MESSAGE" -- sh -c "curl -sk '$api_url' > '$temp_file'"
  http_response=$(cat "$temp_file")
  rm "$temp_file"

  if [ $? -eq 0 ] && [ -n "$http_response" ] && echo "$http_response" | jq -e . >/dev/null 2>&1; then
    quote=$(echo "$http_response" | jq -r "$quote_path")
    author=$(echo "$http_response" | jq -r "$author_path")

    if [ "$quote" != "null" ] && [ "$author" != "null" ] && [ -n "$quote" ] && [ -n "$author" ]; then
      quote_string="$quote -- $author"
      gum_style "$quote_string" "$QUOTE_COLOR" "$AUTHOR_COLOR"
    else
      gum style --foreground "yellow" --bold "Warning: No results found."
    fi
  else
    gum style --foreground "red" --bold "Error: Could not fetch quote."
  fi
}

# --- Main execution ---
fetch_quote