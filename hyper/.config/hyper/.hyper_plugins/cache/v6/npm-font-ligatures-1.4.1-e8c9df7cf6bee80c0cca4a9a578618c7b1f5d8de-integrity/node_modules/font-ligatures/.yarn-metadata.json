{
  "manifest": {
    "name": "font-ligatures",
    "version": "1.4.1",
    "description": "Find ligature replacements for any system font",
    "homepage": "https://github.com/princjef/font-ligatures#readme",
    "repository": {
      "type": "git",
      "url": "https://github.com/princjef/font-ligatures.git"
    },
    "bugs": {
      "url": "https://github.com/princjef/font-ligatures/issues"
    },
    "engines": {
      "node": ">8.0.0"
    },
    "main": "dist/index.js",
    "types": "dist/index.d.ts",
    "scripts": {
      "commit": "commit",
      "commitmsg": "commitlint -e $GIT_PARAMS",
      "commitlint": "commitlint",
      "lint": "tslint --project tsconfig.json --fix",
      "clean": "rimraf dist",
      "prebuild": "npm run clean && npm run lint",
      "build": "tsc",
      "watch": "tsc -w",
      "pretest": "npm run build",
      "test": "nyc ava dist/**/*.spec.js",
      "pretest-nocover": "npm run build",
      "test-nocover": "ava dist/**/*.spec.js",
      "show-coverage": "opener ./coverage/index.html",
      "coverage": "nyc report --reporter=text-lcov > coverage.lcov",
      "prerelease": "npm run build",
      "release": "semantic-release",
      "bench": "node --expose-gc bench/all.js"
    },
    "keywords": [
      "font",
      "opentype",
      "truetype",
      "ligature"
    ],
    "author": {
      "name": "Jeff Principe",
      "email": "princjef@gmail.com"
    },
    "license": "MIT",
    "dependencies": {
      "font-finder": "^1.0.3",
      "lru-cache": "^6.0.0",
      "opentype.js": "^0.8.0"
    },
    "devDependencies": {
      "@commitlint/cli": "^9.1.2",
      "@commitlint/config-conventional": "^9.1.2",
      "@commitlint/prompt-cli": "^9.1.2",
      "@semantic-release/changelog": "^2.1.2",
      "@semantic-release/git": "^4.0.3",
      "@semantic-release/github": "^4.4.2",
      "@semantic-release/npm": "^3.4.1",
      "@types/lru-cache": "^5.1.0",
      "@types/node": "^8.10.10",
      "@types/opentype.js": "^0.7.0",
      "@types/sinon": "^4.3.1",
      "ava": "^0.25.0",
      "chalk": "^2.4.1",
      "codecov": "^3.0.1",
      "columnify": "^1.5.4",
      "husky": "^0.14.3",
      "nyc": "^15.1.0",
      "opener": "^1.4.3",
      "pretty-bytes": "^5.0.0",
      "rimraf": "^2.6.2",
      "semantic-release": "^15.9.3",
      "simple-statistics": "^6.0.0",
      "sinon": "^4.5.0",
      "tslint": "^5.9.1",
      "tslint-config-standard": "^7.0.0",
      "typescript": "^2.8.3"
    },
    "nyc": {
      "sourceMap": true,
      "reporter": [
        "text",
        "html",
        "json"
      ],
      "include": [
        "src/**/*.ts"
      ],
      "exclude": [
        "src/**/*.spec.ts"
      ],
      "check-coverage": true,
      "lines": 85,
      "statements": 85,
      "functions": 85,
      "branches": 75,
      "watermarks": {
        "lines": [
          80,
          90
        ],
        "statements": [
          80,
          90
        ],
        "functions": [
          80,
          90
        ],
        "branches": [
          80,
          90
        ]
      }
    },
    "commitlint": {
      "extends": [
        "@commitlint/config-conventional"
      ]
    },
    "release": {
      "verifyConditions": [
        "@semantic-release/changelog",
        "@semantic-release/github",
        "@semantic-release/npm",
        "@semantic-release/git"
      ],
      "prepare": [
        {
          "path": "@semantic-release/changelog",
          "changelogFile": "CHANGELOG.md"
        },
        "@semantic-release/npm",
        "@semantic-release/git"
      ],
      "publish": [
        "@semantic-release/npm",
        "@semantic-release/github"
      ],
      "success": [
        "@semantic-release/github"
      ],
      "fail": [
        "@semantic-release/github"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/lalitmee/.config/hyper/.hyper_plugins/cache/v6/npm-font-ligatures-1.4.1-e8c9df7cf6bee80c0cca4a9a578618c7b1f5d8de-integrity/node_modules/font-ligatures/package.json",
    "readmeFilename": "README.md",
    "readme": "# font-ligatures\n\n[![GitHub Actions](https://github.com/princjef/font-ligatures/workflows/Build/badge.svg)](https://github.com/princjef/font-ligatures/actions?query=workflow%3ABuild+branch%3Amaster)\n[![codecov](https://codecov.io/gh/princjef/font-ligatures/branch/master/graph/badge.svg)](https://codecov.io/gh/princjef/font-ligatures)\n[![npm version](https://img.shields.io/npm/v/font-ligatures.svg)](https://npmjs.org/package/font-ligatures)\n\nFind ligature replacements for any system font. Useful for determining glyph\nsubstitutions and ranges where ligatures exist within a string of input text.\n\n```\nnpm install font-ligatures\n```\n\n## Usage\n\n```js\nconst fontLigatures = require('font-ligatures');\n\n(async () => {\n  const font = await fontLigatures.load('Iosevka');\n  console.log(font.findLigatures('in --> out'));\n  // {\n  //   inputGlyphs:   [ 76, 81, 3, 16,   16,   33, 3, 82, 88, 87 ],\n  //   outputGlyphs:  [ 76, 81, 3, 3140, 3128, 33, 3, 82, 88, 87 ],\n  //   contextRanges: [ [ 3, 6 ] ]\n  // }\n})();\n```\n\n## API\n\n### `load(name, [options])`\n\nLoads the font with the given name, returning a Promise with a [Font](#font)\nthat can be used to find ligature information.\n\n**Params**\n\n * `name` [*string*] - The font family of the font to load\n * `options` [*object*] - Optional configuration object containing the following\n   keys:\n    * `cacheSize` [*number*] - The amount of data from previous results to cache\n      within the parser. The size is measured by the length of the input text\n      for each call. Turned off by default.\n\n### `loadFile(path, [options])`\n\nLoads the font at the given path, returning a Promise with a [Font](#font) that\ncan be used to find ligature information.\n\n**Params**\n\n * `path` [*string*] - Path to the file containing the font\n * `options` [*object*] - Optional configuration object containing the following\n   keys:\n    * `cacheSize` [*number*] - The amount of data from previous results to cache\n      within the parser. The size is measured by the length of the input text\n      for each call. Turned off by default.\n\n### `loadBuffer(buffer, [options])`\n\nLoads the font from it's binary data, returning a [Font](#font) that\ncan be used to find ligature information.\n\n**Params**\n\n * `buffer` [*ArryaBuffer*] - Binary data of the font file as an ArrayBuffer\n * `options` [*object*] - Optional configuration object containing the following\n   keys:\n    * `cacheSize` [*number*] - The amount of data from previous results to cache\n      within the parser. The size is measured by the length of the input text\n      for each call. Turned off by default.\n\n### Font\n\nObject returned by `load()`. Includes the following methods:\n\n#### `findLigatures(text)`\n\nScans the provided text for font ligatures, returning an object with the\nfollowing keys:\n\n * `inputGlyphs` [*number[]*] - The list of font glyphs in the input text.\n * `outputGlyphs` [*number[]*] - The list of font glyphs after performing\n   replacements for font ligatures.\n * `contextRanges` [*[number, number]\\[\\]*] - Sorted array of ranges that must\n   be rendered together to produce the ligatures in the output sequence. The\n   ranges are inclusive on the left and exclusive on the right\n\n#### `findLigatureRanges(text)`\n\nScans the provided text for font ligatures, returning an array of ranges where\nligatures are located.\n\n**Params**\n\n * `text` [*string*] - text to search for ligatures\n\n## Font Support\n\nThis library is designed to support fonts that make use of programming\nligatures. As a result, it is tested against all of the ligatures produced by\nthe following fonts:\n\n * [Fira Code][]\n * [Iosevka][]\n * [Monoid][]\n\nIf there is another font that you use which doesn't seem to be working, please\nopen an issue with the font information and where to get it. The most likely\ncause is that the font uses a type of substitution which is not yet supported.\n\n## Contributing\n\nWant to contribute to the project? Go check out the [Contribution \nGuide](CONTRIBUTING.md) for instructions to set up your development \nenvironment, open an issue and create a pull request.\n\n[Fira Code]: https://github.com/tonsky/FiraCode\n[Iosevka]: https://be5invis.github.io/Iosevka\n[Monoid]: https://larsenwork.com/monoid\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018 Jeffrey Principe\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/font-ligatures/-/font-ligatures-1.4.1.tgz#e8c9df7cf6bee80c0cca4a9a578618c7b1f5d8de",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/font-ligatures/-/font-ligatures-1.4.1.tgz",
    "hash": "e8c9df7cf6bee80c0cca4a9a578618c7b1f5d8de",
    "integrity": "sha512-7W6zlfyhvCqShZ5ReUWqmSd9vBaUudW0Hxis+tqUjtHhsPU+L3Grf8mcZAtCiXHTzorhwdRTId2WeH/88gdFkw==",
    "registry": "npm",
    "packageName": "font-ligatures",
    "cacheIntegrity": "sha512-7W6zlfyhvCqShZ5ReUWqmSd9vBaUudW0Hxis+tqUjtHhsPU+L3Grf8mcZAtCiXHTzorhwdRTId2WeH/88gdFkw== sha1-6MnffPa+6AwMykqaV4YYx7H12N4="
  },
  "registry": "npm",
  "hash": "e8c9df7cf6bee80c0cca4a9a578618c7b1f5d8de"
}