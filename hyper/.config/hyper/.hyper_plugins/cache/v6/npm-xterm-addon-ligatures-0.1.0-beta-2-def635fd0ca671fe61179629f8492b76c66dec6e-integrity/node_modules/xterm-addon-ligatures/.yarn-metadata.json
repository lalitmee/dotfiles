{
  "manifest": {
    "name": "xterm-addon-ligatures",
    "version": "0.1.0-beta-2",
    "description": "Add support for programming ligatures to xterm.js",
    "homepage": "https://github.com/xtermjs/xterm-addon-ligatures#readme",
    "repository": {
      "type": "git",
      "url": "https://github.com/xtermjs/xterm-addon-ligatures.git"
    },
    "bugs": {
      "url": "https://github.com/xtermjs/xterm-addon-ligatures/issues"
    },
    "engines": {
      "node": ">8.0.0"
    },
    "main": "lib/index.js",
    "types": "typings/xterm-addon-ligatures.d.ts",
    "scripts": {
      "lint": "tslint --project tsconfig.json --fix",
      "prebuild": "npm run lint",
      "build": "tsc",
      "watch": "tsc -w",
      "pretest": "npm run build",
      "test": "nyc mocha lib/**/*.{test,integration}.js",
      "prepublish": "npm run build"
    },
    "keywords": [
      "font",
      "ligature",
      "xterm",
      "xterm.js",
      "terminal"
    ],
    "license": "MIT",
    "dependencies": {
      "font-finder": "^1.0.2",
      "font-ligatures": "^1.3.1"
    },
    "devDependencies": {
      "@types/chai": "^4.1.3",
      "@types/mocha": "^5.2.0",
      "@types/node": "^8.10.10",
      "@types/sinon": "^5.0.1",
      "axios": "^0.18.0",
      "chai": "^4.1.2",
      "mkdirp": "^0.5.1",
      "mocha": "^5.2.0",
      "nyc": "^12.0.2",
      "sinon": "^6.1.3",
      "tslint": "^5.9.1",
      "tslint-consistent-codestyle": "^1.13.0",
      "typescript": "^2.8.3",
      "xterm": "^3.5.0",
      "yauzl": "^2.10.0"
    },
    "peerDependencies": {
      "xterm": "^3.5.0"
    },
    "nyc": {
      "sourceMap": true,
      "reporter": [
        "text",
        "html",
        "json"
      ],
      "include": [
        "lib/**/*.js"
      ],
      "exclude": [
        "lib/**/*.test.*",
        "lib/**/*.integration.*",
        "lib/**/*.d.ts",
        "lib/**/*.map*"
      ]
    },
    "_registry": "npm",
    "_loc": "/home/lalitmee/.config/hyper/.hyper_plugins/cache/v6/npm-xterm-addon-ligatures-0.1.0-beta-2-def635fd0ca671fe61179629f8492b76c66dec6e-integrity/node_modules/xterm-addon-ligatures/package.json",
    "readmeFilename": "README.md",
    "readme": "# xterm-addon-ligatures\n\n[![Build status](https://xtermjs.visualstudio.com/xterm-addon-ligatures/_apis/build/status/xterm-addon-ligatures-CI)](https://xtermjs.visualstudio.com/xterm-addon-ligatures/_build/latest?definitionId=2)\n\nAdd support for programming ligatures to [xterm.js][] when running in\nenvironments with access to [Node.js][] APIs (such as [Electron][]).\n\n## Requirements\n\n * [Node.js][] 8.x or higher (present in [Electron][] 1.8.3 or higher)\n * [xterm.js][] 3.6.0 or higher using the default canvas renderer\n\n## Usage\n\nInstall in your project by running:\n\n```\nnpm install xterm-addon-ligatures\n```\n\nThen, modify the location where you initialize the terminal to enable ligature\nsupport after opening. If you enable ligatures prior to opening the terminal,\nthey will not function properly.\n\nYour code should look something like this:\n\n```js\nimport { Terminal } from 'xterm';\nimport * as ligatures from 'xterm-addon-ligatures';\n\nTerminal.applyAddon(ligatures);\n\nconst terminal = new Terminal();\nterminal.open(document.getElementById('terminal-mount'));\nterminal.enableLigatures();\n```\n\n### Importing in TypeScript\n\nIf you use TypeScript, you will need to cast the terminal variable as `any` when\nyou enable ligatures because TypeScript does not know that the addon is\navailable on the terminal object. It will look like this:\n\n```ts\n(terminal as any).enableLigatures()\n```\n\nAlternatively, you can import the addon directly as a function and pass the\nterminal as an argument:\n\n```js\nimport { Terminal } from 'xterm';\nimport { enableLigatures } from 'xterm-addon-ligatures';\n\nconst terminal = new Terminal();\nterminal.open(document.getElementById('terminal-mount'));\nenableLigatures(terminal);\n```\n\n## How It Works\n\nIn a browser environment, font ligature information is read directly by the web\nbrowser and used to render text correctly without any intervention from the\ndeveloper. As of version 3, xterm.js uses the canvas to render characters\nindividually, resulting in a significant performance boost. However, this means\nthat it can no longer lean on the browser to determine when to draw font\nligatures.\n\nThis package locates the font file on disk for the font currently in use by the\nterminal and parses the ligature information out of it (via the\n[font-ligatures][] package). As text is rendered in xterm.js, this package\nannotates it with the locations of ligatures, allowing xterm.js to render it\ncorrectly.\n\nSince this package depends on being able to find and resolve a system font from\ndisk, it has to have system access that isn't available in the web browser. As a\nresult, this package is mainly useful in environments that combine browser and\nNode.js runtimes (such as [Electron][]).\n\n## Fonts\n\nThis package makes use of the following fonts for testing:\n\n * [Fira Code][] - [Licensed under the OFL][Fira Code License] by Nikita\n   Prokopov, Mozilla Foundation with reserved names Fira Code, Fira Mono, and\n   Fira Sans\n * [Iosevka][] - [Licensed under the OFL][Iosevka License] by Belleve Invis with\n   reserved name Iosevka\n\n[xterm.js]: https://github.com/xtermjs/xterm.js\n[Electron]: https://electronjs.org/\n[Node.js]: https://nodejs.org/\n[font-ligatures]: https://github.com/princjef/font-ligatures\n[Fira Code]: https://github.com/tonsky/FiraCode\n[Fira Code License]: https://github.com/tonsky/FiraCode/blob/master/LICENSE\n[Iosevka]: https://github.com/be5invis/Iosevka\n[Iosevka License]: https://github.com/be5invis/Iosevka/blob/master/LICENSE.md\n",
    "licenseText": "MIT License\n\nCopyright (c) 2018\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/xterm-addon-ligatures/-/xterm-addon-ligatures-0.1.0-beta-2.tgz#def635fd0ca671fe61179629f8492b76c66dec6e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/xterm-addon-ligatures/-/xterm-addon-ligatures-0.1.0-beta-2.tgz",
    "hash": "def635fd0ca671fe61179629f8492b76c66dec6e",
    "integrity": "sha512-MN5zCBxrF9xagzUYIpcgHS4L/Isod3m3ET5S7AUEEbymLJ+4zccio32eyq65Bcc50x/Bm57Hoh9gaSEUdojs8g==",
    "registry": "npm",
    "packageName": "xterm-addon-ligatures",
    "cacheIntegrity": "sha512-MN5zCBxrF9xagzUYIpcgHS4L/Isod3m3ET5S7AUEEbymLJ+4zccio32eyq65Bcc50x/Bm57Hoh9gaSEUdojs8g== sha1-3vY1/Qymcf5hF5Yp+EkrdsZt7G4="
  },
  "registry": "npm",
  "hash": "def635fd0ca671fe61179629f8492b76c66dec6e"
}