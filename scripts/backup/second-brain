#!/bin/bash

# Brain repo paths
PERSONAL_BRAIN_DIR="$HOME/Projects/Personal/Github/second-brain"
WORK_BRAIN_DIR="$HOME/Projects/Work/Github/second-brain"

BRAIN="$1" # expects 'personal' or 'work'

if [[ "$BRAIN" != "personal" && "$BRAIN" != "work" ]]; then
  echo "‚ùå ERROR: Please specify 'personal' or 'work' as the first argument"
  exit 1
fi

# Select the correct directory
if [[ "$BRAIN" == "personal" ]]; then
  TARGET_DIR="$PERSONAL_BRAIN_DIR"
else
  TARGET_DIR="$WORK_BRAIN_DIR"
fi

echo "------------------------------------------------------------"
echo "üß† $BRAIN backup started at: $(date '+%Y-%m-%d %H:%M:%S')"

# 1. Try to cd into the brain directory
if ! cd "$TARGET_DIR" 2>/dev/null; then
  echo "‚ùå ERROR: Failed to cd into $TARGET_DIR"
  exit 1
fi

# 2. Abort any unfinished rebase (to prevent stuck state)
git rebase --abort 2>/dev/null

# 3. Pull latest changes without rebase to avoid interaction
if ! git pull --no-rebase 2>&1 | tee "/tmp/git-pull-$BRAIN.log" | grep -qv "fatal:"; then
  echo "‚ùå ERROR: Git pull failed"
  cat "/tmp/git-pull-$BRAIN.log"
  exit 1
fi

# 4. Only commit and push if there are actual changes
if ! git diff --quiet || ! git diff --cached --quiet; then
  git add .

  if git commit -m "auto: $BRAIN backup on $(date '+%Y-%m-%d %H:%M:%S')" >/dev/null 2>&1; then
    if git push >/dev/null 2>&1; then
      echo "‚úÖ $BRAIN backup committed and pushed"
    else
      echo "‚ùå ERROR: Git push failed for $BRAIN"
    fi
  else
    echo "‚ùå ERROR: Git commit failed for $BRAIN"
  fi
else
  echo "‚úÖ No changes to commit in $BRAIN brain"
fi
