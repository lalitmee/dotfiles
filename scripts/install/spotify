#!/bin/zsh

set -e  # Exit on error
set -o pipefail  # Catch errors in piped commands

# Function to execute a command and handle errors
execute_command() {
    local cmd="$1"
    local success_msg="$2"
    local error_msg="$3"

    if eval "$cmd"; then
        gum_style "$success_msg"
    else
        gum_style "Error: $error_msg" >&2
        exit 1
    fi
}

gum_style "Starting Spotify installation..."

# Add Spotify GPG key
execute_command \
    "curl -sS https://download.spotify.com/debian/pubkey_C85668DF69375001.gpg | sudo gpg --dearmor --yes -o /etc/apt/trusted.gpg.d/spotify.gpg" \
    "Spotify GPG key added successfully." \
    "Failed to add Spotify GPG key."

# Add Spotify repository
execute_command \
    "echo 'deb http://repository.spotify.com stable non-free' | sudo tee /etc/apt/sources.list.d/spotify.list > /dev/null" \
    "Spotify repository added successfully." \
    "Failed to add Spotify repository."

# Update package list
execute_command \
    "sudo apt-get update" \
    "Package list updated successfully." \
    "Failed to update package list."

# Install Spotify client
execute_command \
    "sudo apt-get install -y spotify-client" \
    "Spotify client installed successfully." \
    "Failed to install Spotify client."

# Function to verify installation
verify_installation() {
    if command -v spotify >/dev/null 2>&1; then
        gum_style "Spotify is installed and available as 'spotify'."
    elif dpkg -l | grep -i spotify; then
        gum_style "Spotify package is installed but might not be available in PATH."
    else
        gum_style "Error: Spotify installation verification failed." >&2
        exit 1
    fi
}

# Verify installation
verify_installation

gum_style "Spotify installation completed successfully!"
