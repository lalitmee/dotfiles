# Configuration for Alacritty, the GPU enhanced terminal emulator.

# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  TERM: xterm-256color
  WINIT_X11_SCALE_FACTOR: '1.0'

window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  dimensions:
    columns: 0
    lines: 0

  # Window position (changes require restart)
  #
  # Specified in number of pixels.
  # If the position is not set, the window manager will handle the placement.
  position:
    x: 0
    y: 0

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 10
    y: 10
  # Spread additional padding evenly around the terminal content.
  #dynamic_padding: false

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background, but no title bar buttons
  decorations: none
  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  startup_mode: Maximized
  # Window title
  #title: Alacritty
  # Window class (Linux/BSD only):
  #class:
  # Application instance name
  #instance: Alacritty
  # General application class
  #general: Alacritty

  # GTK theme variant (Linux/BSD only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  #gtk_theme_variant: None

  scrolling:
    # Maximum number of lines in the scrollback buffer.
    # Specifying '0' will disable scrolling.
    history: 10000
    # Number of lines the viewport will move for every line scrolled when
    # scrollback is enabled (history > 0).
    multiplier: 3

  # Font configuration
font:
  normal:
    family: Operator Mono Nerd Font
    style: Medium

  bold:
    family: Operator Mono Nerd Font
    style: Bold

  italic:
    family: Operator Mono Nerd Font
    style: Medium Italic

  bold_italic:
    family: Operator Mono Nerd Font
    style: Bold Italic

  # font:
  #   normal:
  #     family: JetBrainsMono Nerd Font
  #     style: Medium

  #   bold:
  #     family: JetBrainsMono Nerd Font
  #     style: Bold

  #   italic:
  #     family: JetBrainsMono Nerd Font
  #     style: Italic

  #   bold_italic:
  #     family: JetBrainsMono Nerd Font
  #     style: Bold Italic

  # font:
  #   normal:
  #     family: UbuntuMono Nerd Font
  #     style: Regular

  #   bold:
  #     family: UbuntuMono Nerd Font
  #     style: Bold

  #   italic:
  #     family: UbuntuMono Nerd Font
  #     style: Italic

  #   bold_italic:
  #     family: UbuntuMono Nerd Font
  #     style: Bold Italic

  # font:
  #   normal:
  #     family: BlexMono Nerd Font
  #     style: Medium

  #   bold:
  #     family: BlexMono Nerd Font
  #     style: Bold

  #   italic:
  #     family: BlexMono Nerd Font
  #     style: Medium Italic

  #   bold_italic:
  #     family: BlexMono Nerd Font
  #     style: Bolt Italic

  # font:
  #   normal:
  #     family: CaskaydiaCove Nerd Font
  #     style: Bold

  #   bold:
  #     family: CaskaydiaCove Nerd Font
  #     style: Bold

  #   italic:
  #     family: CaskaydiaCove Nerd Font
  #     style: Italic

  #   bold_italic:
  #     family: CaskaydiaCove Nerd Font
  #     style: Bolt Italic

  size: 12
  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0
  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  glyph_offset:
    x: 0
    y: 0
# Thin stroke font rendering (macOS only)
#
# Thin strokes are suitable for retina displays, but for non-retina screens
# it is recommended to set `use_thin_strokes` to `false`
#
# macOS >= 10.14.x:
#
# If the font quality on non-retina display looks bad then set
# `use_thin_strokes` to `true` and enable font smoothing by running the
# following command:
#   `defaults write -g CGFontRenderingFontSmoothingDisabled -bool NO`
#
# This is a global setting and will require a log out or restart to take
# effect.
#use_thin_strokes: true

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

## Colors (Cobalt 2)
#colors:
#  cursor:
#    text: '#fefff2'
#    cursor: '#f0cc09'

#  selection:
#    text: '#b5b5b5'
#    background: '#18354f'

#  primary:
#    background: '#132738'
#    foreground: '#ffffff'

#  normal:
#    black: '#000000'
#    red: '#ff0000'
#    green: '#38de21'
#    yellow: '#ffe50a'
#    blue: '#1460d2'
#    magenta: '#ff005d'
#    cyan: '#00bbbb'
#    white: '#bbbbbb'

#  bright:
#    black: '#555555'
#    red: '#f40e17'
#    green: '#3bd01d'
#    yellow: '#edc809'
#    blue: '#5555ff'
#    magenta: '#ff55ff'
#    cyan: '#6ae3fa'
#    white: '#ffffff'

#  dim:
#    black: '#000000'
#    red: '#8c3336'
#    green: '#7a8530'
#    yellow: '#97822e'
#    blue: '#506d8f'
#    magenta: '#80638e'
#    cyan: '#497e7a'
#    white: '#9a9a9a'

## Colors (Gruvbox dark)
#colors:
#  # Default colors
#  primary:
#    # hard contrast: background = '#1d2021'
#    background: '#282828'
#    # soft contrast: background = '#32302f'
#    foreground: '#ebdbb2'
#  #
#  # Normal colors
#  normal:
#    black: '#282828'
#    red: '#cc241d'
#    green: '#98971a'
#    yellow: '#d79921'
#    blue: '#458588'
#    magenta: '#b16286'
#    cyan: '#689d6a'
#    white: '#a89984'
#  #
#  # Bright colors
#  bright:
#    black: '#928374'
#    red: '#fb4934'
#    green: '#b8bb26'
#    yellow: '#fabd2f'
#    blue: '#83a598'
#    magenta: '#d3869b'
#    cyan: '#8ec07c'
#    white: '#ebdbb2'

# # Colors (Nord)
# colors:
#   primary:
#     background: '#2e3440'
#     foreground: '#d8dee9'
#     dim_foreground: '#a5abb6'
#   cursor:
#     text: '#2e3440'
#     cursor: '#d8dee9'
#   vi_mode_cursor:
#     text: '#2e3440'
#     cursor: '#d8dee9'
#   selection:
#     text: CellForeground
#     background: '#4c566a'
#   search:
#     matches:
#       foreground: CellBackground
#       background: '#88c0d0'
#     bar:
#       background: '#434c5e'
#       foreground: '#d8dee9'
#   normal:
#     black: '#3b4252'
#     red: '#bf616a'
#     green: '#a3be8c'
#     yellow: '#ebcb8b'
#     blue: '#81a1c1'
#     magenta: '#b48ead'
#     cyan: '#88c0d0'
#     white: '#e5e9f0'
#   bright:
#     black: '#4c566a'
#     red: '#bf616a'
#     green: '#a3be8c'
#     yellow: '#ebcb8b'
#     blue: '#81a1c1'
#     magenta: '#b48ead'
#     cyan: '#8fbcbb'
#     white: '#eceff4'
#   dim:
#     black: '#373e4d'
#     red: '#94545d'
#     green: '#809575'
#     yellow: '#b29e75'
#     blue: '#68809a'
#     magenta: '#8c738c'
#     cyan: '#6d96a5'
#     white: '#aeb3bb'

# # TokyoNight Alacritty Colors
# # tokyonight_night
# colors:
#   # Default colors
#   primary:
#     background: '0x1a1b26'
#     foreground: '0xc0caf5'

#   # Normal colors
#   normal:
#     black: '0x15161E'
#     red: '0xf7768e'
#     green: '0x9ece6a'
#     yellow: '0xe0af68'
#     blue: '0x7aa2f7'
#     magenta: '0xbb9af7'
#     cyan: '0x7dcfff'
#     white: '0xa9b1d6'

#   # Bright colors
#   bright:
#     black: '0x414868'
#     red: '0xf7768e'
#     green: '0x9ece6a'
#     yellow: '0xe0af68'
#     blue: '0x7aa2f7'
#     magenta: '0xbb9af7'
#     cyan: '0x7dcfff'
#     white: '0xc0caf5'

#   indexed_colors:
#     - { index: 16, color: '0xff9e64' }
#     - { index: 17, color: '0xdb4b4b' }

# tokyonight_storm
colors:
  # Default colors
  primary:
    background: '0x24283b'
    foreground: '0xc0caf5'

  # Normal colors
  normal:
    black: '0x1D202F'
    red: '0xf7768e'
    green: '0x9ece6a'
    yellow: '0xe0af68'
    blue: '0x7aa2f7'
    magenta: '0xbb9af7'
    cyan: '0x7dcfff'
    white: '0xa9b1d6'

  # Bright colors
  bright:
    black: '0x414868'
    red: '0xf7768e'
    green: '0x9ece6a'
    yellow: '0xe0af68'
    blue: '0x7aa2f7'
    magenta: '0xbb9af7'
    cyan: '0x7dcfff'
    white: '0xc0caf5'

  indexed_colors:
    - { index: 16, color: '0xff9e64' }
    - { index: 17, color: '0xdb4b4b' }

# # tokyonight_day
# colors:
#   # Default colors
#   primary:
#     background: '0xe1e2e7'
#     foreground: '0x3760bf'

#   # Normal colors
#   normal:
#     black: '0xe9e9ed'
#     red: '0xf52a65'
#     green: '0x587539'
#     yellow: '0x8c6c3e'
#     blue: '0x2e7de9'
#     magenta: '0x9854f1'
#     cyan: '0x007197'
#     white: '0x6172b0'

#   # Bright colors
#   bright:
#     black: '0xa1a6c5'
#     red: '0xf52a65'
#     green: '0x587539'
#     yellow: '0x8c6c3e'
#     blue: '0x2e7de9'
#     magenta: '0x9854f1'
#     cyan: '0x007197'
#     white: '0x3760bf'

#   indexed_colors:
#     - { index: 16, color: '0xb15c00' }
#     - { index: 17, color: '0xc64343' }

# # vscode dark
# colors:
#   primary:
#     background: '#1e1e1e'
#     foreground: '#d4d4d4'

#   cursor:
#     text: '#d4d4d4'
#     cursor: '#d4d4d4'

#   normal:
#     black: '#1e1e1e'
#     red: '#f44747'
#     green: '#608b4e'
#     yellow: '#dcdcaa'
#     blue: '#569cd6'
#     magenta: '#c678dd'
#     cyan: '#56b6c2'
#     white: '#d4d4d4'

#   bright:
#     black: '#545454'
#     red: '#f44747'
#     green: '#608b4e'
#     yellow: '#dcdcaa'
#     blue: '#569cd6'
#     magenta: '#c678dd'
#     cyan: '#56b6c2'
#     white: '#d4d4d4'

# # vscode light
# colors:
#     primary:
#       background: '#ffffff'
#       foreground: '#1e1e1e'

#     cursor:
#       text: '#d4d4d4'
#       cursor: '#d4d4d4'

#     normal:
#       black:   '#1e1e1e'
#       red:     '#c72e0f'
#       green:   '#009000'
#       yellow:  '#795e25'
#       blue:    '#007acc'
#       magenta: '#af00db'
#       cyan:    '#56b6c2'
#       white:   '#d4d4d4'

#     bright:
#       black:   '#1e1e1e'
#       red:     '#c72e0f'
#       green:   '#009000'
#       yellow:  '#795e25'
#       blue:    '#007acc'
#       magenta: '#af00db'
#       cyan:    '#56b6c2'
#       white:   '#d4d4d4'

# # TokyoNight Alacritty Colors
# # tokyonight_storm
# colors:
#   # Default colors
#   primary:
#     background: '0x24283b'
#     foreground: '0xc0caf5'

#   # Normal colors
#   normal:
#     black:   '0x1D202F'
#     red:     '0xf7768e'
#     green:   '0x9ece6a'
#     yellow:  '0xe0af68'
#     blue:    '0x7aa2f7'
#     magenta: '0xbb9af7'
#     cyan:    '0x7dcfff'
#     white:   '0xa9b1d6'

#   # Bright colors
#   bright:
#     black:   '0x414868'
#     red:     '0xf7768e'
#     green:   '0x9ece6a'
#     yellow:  '0xe0af68'
#     blue:    '0x7aa2f7'
#     magenta: '0xbb9af7'
#     cyan:    '0x7dcfff'
#     white:   '0xc0caf5'

#   indexed_colors:
#     - { index: 16, color: '0xff9e64' }
#     - { index: 17, color: '0xdb4b4b' }

# # Space Duck
# colors:
#   # Default colors
#   primary:
#     background: '#0f111b'
#     foreground: '#ecf0c1'
#   # Normal colors
#   normal:
#     black:   '#000000'
#     red:     '#e33400'
#     green:   '#5ccc96'
#     yellow:  '#b3a1e6'
#     blue:    '#00a3cc'
#     magenta: '#f2ce00'
#     cyan:    '#7a5ccc'
#     white:   '#686f9a'

#   # Bright colors
#   bright:
#     black:   '#686f9a'
#     red:     '#e33400'
#     green:   '#5ccc96'
#     yellow:  '#b3a1e6'
#     blue:    '#00a3cc'
#     magenta: '#f2ce00'
#     cyan:    '#7a5ccc'
#     white:   '#f0f1ce'

# Indexed Colors
#
# The indexed colors include all colors from 16 to 256.
# When these are not set, they're filled with sensible defaults.
#
# Example:
#   `- { index: 16, color: '#ff00ff' }`
#
#indexed_colors: []

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
#visual_bell:
#  animation: EaseOutExpo
#  duration: 0
#  color: '#ffffff'

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
background_opacity: 0.98
#selection:
#semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

# When set to `true`, selected text will be copied to the primary clipboard.
#save_to_clipboard: false

# Allow terminal applications to change Alacritty's window title.
#dynamic_title: true

cursor:
  # Cursor style
  #
  # Values for `style`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  style: Block

# If this is `true`, the cursor will be rendered as a hollow box when the
# window is not focused.
#unfocused_hollow: true

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
# Default:
#   - (macOS) /bin/bash --login
#   - (Linux/BSD) user login shell
#   - (Windows) powershell
shell:
  program: /usr/bin/zsh
  args:
    - --login

# Startup directory
#
# Directory the shell is started in. If this is unset, or `None`, the working
# directory of the parent process will be used.
#working_directory: None

# WinPTY backend (Windows only)
#
# Alacritty defaults to using the newer ConPTY backend if it is available,
# since it resolves a lot of bugs and is quite a bit faster. If it is not
# available, the the WinPTY backend will be used instead.
#
# Setting this option to `true` makes Alacritty use the legacy WinPTY backend,
# even if the ConPTY backend is available.
#winpty_backend: false

# Send ESC (\x1b) before characters when alt is pressed.
#alt_send_esc: true

#mouse:
# Click settings
#
# The `double_click` and `triple_click` settings control the time
# alacritty should wait for accepting multiple clicks as one double
# or triple click.
#double_click: { threshold: 300 }
#triple_click: { threshold: 300 }

# If this is `true`, the cursor is temporarily hidden when typing.
#hide_when_typing: false

url:
# URL launcher
#
# This program is executed when clicking on a text which is recognized as a URL.
# The URL is always added to the command as the last parameter.
#
# When set to `None`, URL launching will be disabled completely.
#
# Default:
#   - (macOS) open
#   - (Linux/BSD) xdg-open
#   - (Windows) explorer
launcher:
  program: xdg-open
  args: []

# URL modifiers
#
# These are the modifiers that need to be held down for opening URLs when clicking
# on them. The available modifiers are documented in the key binding section.
#modifiers: None

# Mouse bindings
#
# Mouse bindings are specified as a list of objects, much like the key
# bindings further below.
#
# To trigger mouse bindings when an application running within Alacritty captures the mouse, the
# `Shift` modifier is automatically added as a requirement.
#
# Each mouse binding will specify a:
#
# - `mouse`:
#
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# - `action` (see key bindings)
#
# And optionally:
#
# - `mods` (see key bindings)
#mouse_bindings:
#  - { mouse: Middle, action: PasteSelection }

# Key bindings
#
# Key bindings are specified as a list of objects. For example, this is the
# default paste binding:
#
# `- { key: V, mods: Control|Shift, action: Paste }`
#
# Each key binding will specify a:
#
# - `key`: Identifier of the key pressed
#
#    - A-Z
#    - F1-F24
#    - Key0-Key9
#
#    A full list with available key codes can be found here:
#    https://docs.rs/glutin/*/glutin/event/enum.VirtualKeyCode.html#variants
#
#    Instead of using the name of the keys, the `key` field also supports using
#    the scancode of the desired key. Scancodes have to be specified as a
#    decimal number. This command will allow you to display the hex scancodes
#    for certain keys:
#
#       `showkey --scancodes`.
#
# Then exactly one of:
#
# - `chars`: Send a byte sequence to the running application
#
#    The `chars` field writes the specified string to the terminal. This makes
#    it possible to pass escape sequences. To find escape codes for bindings
#    like `PageUp` (`"\x1b[5~"`), you can run the command `showkey -a` outside
#    of tmux. Note that applications use terminfo to map escape sequences back
#    to keys. It is therefore required to update the terminfo when changing an
#    escape sequence.
#
# - `action`: Execute a predefined action
#
#   - Copy
#   - Paste
#   - PasteSelection
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Minimize
#   - Quit
#   - ToggleFullscreen
#   - SpawnNewInstance
#   - ClearLogNotice
#   - ReceiveChar
#   - None
#
#   (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# - `command`: Fork and execute a specified command plus arguments
#
#    The `command` field must be a map containing a `program` string and an
#    `args` array of command line parameter strings. For example:
#       `{ program: "alacritty", args: ["-e", "vttest"] }`
#
# And optionally:
#
# - `mods`: Key modifiers to filter binding actions
#
#    - Command
#    - Control
#    - Option
#    - Super
#    - Shift
#    - Alt
#
#    Multiple `mods` can be combined using `|` like this:
#       `mods: Control|Shift`.
#    Whitespace and capitalization are relevant and must match the example.
#
# - `mode`: Indicate a binding for only specific terminal reported modes
#
#    This is mainly used to send applications the correct escape sequences
#    when in different modes.
#
#    - AppCursor
#    - AppKeypad
#    - Alt
#
#    A `~` operator can be used before a mode to apply the binding whenever
#    the mode is *not* active, e.g. `~Alt`.
#
# Bindings are always filled by default, but will be replaced when a new
# binding with the same triggers is defined. To unset a default binding, it can
# be mapped to the `ReceiveChar` action. Alternatively, you can use `None` for
# a no-op if you do not wish to receive input characters for that binding.
#
# If the same trigger is assigned to multiple actions, all of them are executed
# at once.
#key_bindings:
# (Windows, Linux, and BSD only)
#- { key: V,        mods: Control|Shift, action: Paste            }
#- { key: C,        mods: Control|Shift, action: Copy             }
#- { key: Insert,   mods: Shift,         action: PasteSelection   }
#- { key: Key0,     mods: Control,       action: ResetFontSize    }
#- { key: Equals,   mods: Control,       action: IncreaseFontSize }
#- { key: Add,      mods: Control,       action: IncreaseFontSize }
#- { key: Subtract, mods: Control,       action: DecreaseFontSize }
#- { key: Minus,    mods: Control,       action: DecreaseFontSize }

# (Windows only)
#- { key: Return,   mods: Alt,           action: ToggleFullscreen }

# (macOS only)
#- { key: Key0,   mods: Command,         action: ResetFontSize    }
#- { key: Equals, mods: Command,         action: IncreaseFontSize }
#- { key: Add,    mods: Command,         action: IncreaseFontSize }
#- { key: Minus,  mods: Command,         action: DecreaseFontSize }
#- { key: K,      mods: Command,         action: ClearHistory     }
#- { key: K,      mods: Command,         chars: "\x0c"            }
#- { key: V,      mods: Command,         action: Paste            }
#- { key: C,      mods: Command,         action: Copy             }
#- { key: H,      mods: Command,         action: Hide             }
#- { key: M,      mods: Command,         action: Minimize         }
#- { key: Q,      mods: Command,         action: Quit             }
#- { key: W,      mods: Command,         action: Quit             }
#- { key: F,      mods: Command|Control, action: ToggleFullscreen }

#- { key: Paste,                    action: Paste                            }
#- { key: Copy,                     action: Copy                             }
#- { key: L,         mods: Control, action: ClearLogNotice                   }
#- { key: L,         mods: Control, chars: "\x0c"                            }
#- { key: PageUp,    mods: Shift,   action: ScrollPageUp,   mode: ~Alt       }
#- { key: PageDown,  mods: Shift,   action: ScrollPageDown, mode: ~Alt       }
#- { key: Home,      mods: Shift,   action: ScrollToTop,    mode: ~Alt       }
#- { key: End,       mods: Shift,   action: ScrollToBottom, mode: ~Alt       }

key_bindings:
  - { key: V, mods: Control|Shift, action: Paste }
  - { key: C, mods: Control|Shift, action: Copy }
  - { key: Q, mods: Command, action: Quit }
  - { key: W, mods: Command, action: Quit }
  - { key: Insert, mods: Shift, action: PasteSelection }
  - { key: Key0, mods: Control, action: ResetFontSize }
  - { key: Equals, mods: Control, action: IncreaseFontSize }
  - { key: Minus, mods: Control, action: DecreaseFontSize }
  - { key: Home, chars: "\x1bOH", mode: AppCursor }
  - { key: Home, chars: "\x1b[H", mode: ~AppCursor }
  - { key: End, chars: "\x1bOF", mode: AppCursor }
  - { key: End, chars: "\x1b[F", mode: ~AppCursor }
  - { key: PageUp, mods: Shift, chars: "\x1b[5;2~" }
  - { key: PageUp, mods: Control, chars: "\x1b[5;5~" }
  - { key: PageUp, chars: "\x1b[5~" }
  - { key: PageDown, mods: Shift, chars: "\x1b[6;2~" }
  - { key: PageDown, mods: Control, chars: "\x1b[6;5~" }
  - { key: PageDown, chars: "\x1b[6~" }
  - { key: Tab, mods: Shift, chars: "\x1b[Z" }
  - { key: Back, chars: "\x7f" }
  - { key: Back, mods: Alt, chars: "\x1b\x7f" }
  - { key: Insert, chars: "\x1b[2~" }
  - { key: Delete, chars: "\x1b[3~" }
  - { key: Left, mods: Shift, chars: "\x1b[1;2D" }
  - { key: Left, mods: Control, chars: "\x1b[1;5D" }
  - { key: Left, mods: Alt, chars: "\x1b[1;3D" }
  - { key: Left, chars: "\x1b[D", mode: ~AppCursor }
  - { key: Left, chars: "\x1bOD", mode: AppCursor }
  - { key: Right, mods: Shift, chars: "\x1b[1;2C" }
  - { key: Right, mods: Control, chars: "\x1b[1;5C" }
  - { key: Right, mods: Alt, chars: "\x1b[1;3C" }
  - { key: Right, chars: "\x1b[C", mode: ~AppCursor }
  - { key: Right, chars: "\x1bOC", mode: AppCursor }
  - { key: Up, mods: Shift, chars: "\x1b[1;2A" }
  - { key: Up, mods: Control, chars: "\x1b[1;5A" }
  - { key: Up, mods: Alt, chars: "\x1b[1;3A" }
  - { key: Up, chars: "\x1b[A", mode: ~AppCursor }
  - { key: Up, chars: "\x1bOA", mode: AppCursor }
  - { key: Down, mods: Shift, chars: "\x1b[1;2B" }
  - { key: Down, mods: Control, chars: "\x1b[1;5B" }
  - { key: Down, mods: Alt, chars: "\x1b[1;3B" }
  - { key: Down, chars: "\x1b[B", mode: ~AppCursor }
  - { key: Down, chars: "\x1bOB", mode: AppCursor }
  - { key: F1, chars: "\x1bOP" }
  - { key: F2, chars: "\x1bOQ" }
  - { key: F3, chars: "\x1bOR" }
  - { key: F4, chars: "\x1bOS" }
  - { key: F5, chars: "\x1b[15~" }
  - { key: F6, chars: "\x1b[17~" }
  - { key: F7, chars: "\x1b[18~" }
  - { key: F8, chars: "\x1b[19~" }
  - { key: F9, chars: "\x1b[20~" }
  - { key: F10, chars: "\x1b[21~" }
  - { key: F11, chars: "\x1b[23~" }
  - { key: F12, chars: "\x1b[24~" }
  - { key: F1, mods: Shift, chars: "\x1b[1;2P" }
  - { key: F2, mods: Shift, chars: "\x1b[1;2Q" }
  - { key: F3, mods: Shift, chars: "\x1b[1;2R" }
  - { key: F4, mods: Shift, chars: "\x1b[1;2S" }
  - { key: F5, mods: Shift, chars: "\x1b[15;2~" }
  - { key: F6, mods: Shift, chars: "\x1b[17;2~" }
  - { key: F7, mods: Shift, chars: "\x1b[18;2~" }
  - { key: F8, mods: Shift, chars: "\x1b[19;2~" }
  - { key: F9, mods: Shift, chars: "\x1b[20;2~" }
  - { key: F10, mods: Shift, chars: "\x1b[21;2~" }
  - { key: F11, mods: Shift, chars: "\x1b[23;2~" }
  - { key: F12, mods: Shift, chars: "\x1b[24;2~" }
  - { key: F1, mods: Control, chars: "\x1b[1;5P" }
  - { key: F2, mods: Control, chars: "\x1b[1;5Q" }
  - { key: F3, mods: Control, chars: "\x1b[1;5R" }
  - { key: F4, mods: Control, chars: "\x1b[1;5S" }
  - { key: F5, mods: Control, chars: "\x1b[15;5~" }
  - { key: F6, mods: Control, chars: "\x1b[17;5~" }
  - { key: F7, mods: Control, chars: "\x1b[18;5~" }
  - { key: F8, mods: Control, chars: "\x1b[19;5~" }
  - { key: F9, mods: Control, chars: "\x1b[20;5~" }
  - { key: F10, mods: Control, chars: "\x1b[21;5~" }
  - { key: F11, mods: Control, chars: "\x1b[23;5~" }
  - { key: F12, mods: Control, chars: "\x1b[24;5~" }
  - { key: F1, mods: Alt, chars: "\x1b[1;6P" }
  - { key: F2, mods: Alt, chars: "\x1b[1;6Q" }
  - { key: F3, mods: Alt, chars: "\x1b[1;6R" }
  - { key: F4, mods: Alt, chars: "\x1b[1;6S" }
  - { key: F5, mods: Alt, chars: "\x1b[15;6~" }
  - { key: F6, mods: Alt, chars: "\x1b[17;6~" }
  - { key: F7, mods: Alt, chars: "\x1b[18;6~" }
  - { key: F8, mods: Alt, chars: "\x1b[19;6~" }
  - { key: F9, mods: Alt, chars: "\x1b[20;6~" }
  - { key: F10, mods: Alt, chars: "\x1b[21;6~" }
  - { key: F11, mods: Alt, chars: "\x1b[23;6~" }
  - { key: F12, mods: Alt, chars: "\x1b[24;6~" }
  - { key: F1, mods: Super, chars: "\x1b[1;3P" }
  - { key: F2, mods: Super, chars: "\x1b[1;3Q" }
  - { key: F3, mods: Super, chars: "\x1b[1;3R" }
  - { key: F4, mods: Super, chars: "\x1b[1;3S" }
  - { key: F5, mods: Super, chars: "\x1b[15;3~" }
  - { key: F6, mods: Super, chars: "\x1b[17;3~" }
  - { key: F7, mods: Super, chars: "\x1b[18;3~" }
  - { key: F8, mods: Super, chars: "\x1b[19;3~" }
  - { key: F9, mods: Super, chars: "\x1b[20;3~" }
  - { key: F10, mods: Super, chars: "\x1b[21;3~" }
  - { key: F11, mods: Super, chars: "\x1b[23;3~" }
  - { key: F12, mods: Super, chars: "\x1b[24;3~" }
#debug:
# Display the time it takes to redraw each frame.
#render_timer: false

# Keep the log file after quitting Alacritty.
#persistent_logging: false

# Log level
#
# Values for `log_level`:
#   - None
#   - Error
#   - Warn
#   - Info
#   - Debug
#   - Trace
#log_level: Warn

# Print all received window events.
#print_events: false
