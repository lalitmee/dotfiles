# : << EOF
# https://github.com/gpakosz/.tmux
# (‚Äë‚óè‚Äë‚óè)> dual licensed under the WTFPL v2 license and the MIT license,
#         without any warranty.
#         Copyright 2012‚Äî Gregory Pakosz (@gpakosz).

# -- navigation ----------------------------------------------------------------

# if you're running tmux within iTermg
#   - and tmux is 1.9 or 1.9a
#   - and iTerm2 is configured to let option key act as +Esc
#   - and iTerm2 is configured to send [1;9A -> [1;9D for option + arrow keys
# then uncomment the following line to make Meta + arrow keys mapping work
#set -ga terminal-overrides "*:kUP3=\e[1;9A,*:kDN3=\e[1;9B,*:kRIT3=\e[1;9C,*:kLFT3=\e[1;9D"

# -- windows & pane creation ---------------------------------------------------

# new window retains current path, possible values are:
#   - true
#   - false (default)
tmux_conf_new_window_retain_current_path=false

# new pane retains current path, possible values are:
#   - true (default)
#   - false
tmux_conf_new_pane_retain_current_path=true

# new pane tries to reconnect ssh sessions (experimental), possible values are:
#   - true
#   - false (default)
tmux_conf_new_pane_reconnect_ssh=false

# prompt for session name when creating a new session, possible values are:
#   - true
#   - false (default)
tmux_conf_new_session_prompt=false

# -- display -------------------------------------------------------------------

# RGB 24-bit colour support (tmux >= 2.2), possible values are:
#  - true
#  - false (default)
tmux_conf_24b_colour=false

# # default theme
# tmux_conf_theme_colour_1="#080808"    # dark gray
# tmux_conf_theme_colour_2="#303030"    # gray
# tmux_conf_theme_colour_3="#8a8a8a"    # light gray
# tmux_conf_theme_colour_4="#00afff"    # light blue
# tmux_conf_theme_colour_5="#ffff00"    # yellow
# tmux_conf_theme_colour_6="#080808"    # dark gray
# tmux_conf_theme_colour_7="#e4e4e4"    # white
# tmux_conf_theme_colour_8="#080808"    # dark gray
# tmux_conf_theme_colour_9="#ffff00"    # yellow
# tmux_conf_theme_colour_10="#ff00af"   # pink
# tmux_conf_theme_colour_11="#5fff00"   # green
# tmux_conf_theme_colour_12="#8a8a8a"   # light gray
# tmux_conf_theme_colour_13="#e4e4e4"   # white
# tmux_conf_theme_colour_14="#080808"   # dark gray
# tmux_conf_theme_colour_15="#080808"   # dark gray
# tmux_conf_theme_colour_16="#d70000"   # red
# tmux_conf_theme_colour_17="#e4e4e4"   # white

# cobalt2 theme
tmux_conf_theme_colour_1="#080808"    # dark gray
tmux_conf_theme_colour_2="#303030"    # gray
tmux_conf_theme_colour_3="#8a8a8a"    # light gray
tmux_conf_theme_colour_4="#0050a4"    # light blue
tmux_conf_theme_colour_5="#ffc600"    # yellow
tmux_conf_theme_colour_6="#080808"    # dark gray
tmux_conf_theme_colour_7="#e4e4e4"    # white
tmux_conf_theme_colour_8="#080808"    # dark gray
tmux_conf_theme_colour_9="#ffc600"    # yellow
tmux_conf_theme_colour_10="#ff00ff"   # pink
tmux_conf_theme_colour_11="#5fff00"   # green
tmux_conf_theme_colour_12="#8a8a8a"   # light gray
tmux_conf_theme_colour_13="#e4e4e4"   # white
tmux_conf_theme_colour_14="#080808"   # dark gray
tmux_conf_theme_colour_15="#0d3a58"   # dark gray
tmux_conf_theme_colour_16="#d70000"   # red
tmux_conf_theme_colour_17="#e4e4e4"   # white

# default theme (ansi)
#tmux_conf_theme_colour_1="colour0"
#tmux_conf_theme_colour_2="colour8"
#tmux_conf_theme_colour_3="colour8"
#tmux_conf_theme_colour_4="colour14"
#tmux_conf_theme_colour_5="colour11"
#tmux_conf_theme_colour_6="colour0"
#tmux_conf_theme_colour_7="colour15"
#tmux_conf_theme_colour_8="colour0"
#tmux_conf_theme_colour_9="colour11"
#tmux_conf_theme_colour_10="colour13"
#tmux_conf_theme_colour_11="colour10"
#tmux_conf_theme_colour_12="colour8"
#tmux_conf_theme_colour_13="colour15"
#tmux_conf_theme_colour_14="colour0"
#tmux_conf_theme_colour_15="colour0"
#tmux_conf_theme_colour_16="colour1"
#tmux_conf_theme_colour_17="colour15"

# window style
tmux_conf_theme_window_fg="default"
tmux_conf_theme_window_bg="default"

# highlight focused pane (tmux >= 2.1), possible values are:
#   - true
#   - false (default)
tmux_conf_theme_highlight_focused_pane=false

# focused pane colours:
tmux_conf_theme_focused_pane_bg="$tmux_conf_theme_colour_2"

# pane border style, possible values are:
#   - thin (default)
#   - fat
tmux_conf_theme_pane_border_style=thin

# pane borders colours:
tmux_conf_theme_pane_border="$tmux_conf_theme_colour_4"
tmux_conf_theme_pane_active_border="$tmux_conf_theme_colour_5"

# pane indicator colours (when you hit <prefix> + q)
tmux_conf_theme_pane_indicator="$tmux_conf_theme_colour_4"
tmux_conf_theme_pane_active_indicator="$tmux_conf_theme_colour_5"

# status line style
tmux_conf_theme_message_fg="$tmux_conf_theme_colour_1"
tmux_conf_theme_message_bg="$tmux_conf_theme_colour_5"
tmux_conf_theme_message_attr="bold"

# status line command style (<prefix> : Escape)
tmux_conf_theme_message_command_fg="$tmux_conf_theme_colour_5"
tmux_conf_theme_message_command_bg="$tmux_conf_theme_colour_1"
tmux_conf_theme_message_command_attr="bold"

# window modes style
tmux_conf_theme_mode_fg="$tmux_conf_theme_colour_1"
tmux_conf_theme_mode_bg="$tmux_conf_theme_colour_5"
tmux_conf_theme_mode_attr="bold"

# status line style
tmux_conf_theme_status_fg="$tmux_conf_theme_colour_3"
tmux_conf_theme_status_bg="$tmux_conf_theme_colour_15"
tmux_conf_theme_status_attr="none"

# terminal title
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_terminal_title="#h ‚ùê #S ‚óè #I #W"

# window status style
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_window_status_fg="$tmux_conf_theme_colour_7"
tmux_conf_theme_window_status_bg="$tmux_conf_theme_colour_15"
tmux_conf_theme_window_status_attr="none"
tmux_conf_theme_window_status_format="#I:#W"
#tmux_conf_theme_window_status_format="#{circled_window_index} #W"
#tmux_conf_theme_window_status_format="#I #W#{?window_bell_flag,üîî,}#{?window_zoomed_flag,üîç,}"

# window current status style
#   - built-in variables are:
#     - #{circled_window_index}
#     - #{circled_session_name}
#     - #{hostname}
#     - #{hostname_ssh}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_window_status_current_fg="$tmux_conf_theme_colour_5"
tmux_conf_theme_window_status_current_bg="$tmux_conf_theme_colour_4"
tmux_conf_theme_window_status_current_attr="bold"
tmux_conf_theme_window_status_current_format="#I:#W"
#tmux_conf_theme_window_status_current_format="#{circled_window_index} #W"
#tmux_conf_theme_window_status_current_format="#I #W#{?window_zoomed_flag,üîç,}"

# window activity status style
tmux_conf_theme_window_status_activity_fg="default"
tmux_conf_theme_window_status_activity_bg="default"
tmux_conf_theme_window_status_activity_attr="underscore"

# window bell status style
tmux_conf_theme_window_status_bell_fg="$tmux_conf_theme_colour_5"
tmux_conf_theme_window_status_bell_bg="default"
tmux_conf_theme_window_status_bell_attr="blink,bold"

# window last status style
tmux_conf_theme_window_status_last_fg="$tmux_conf_theme_colour_5"
tmux_conf_theme_window_status_last_bg="$tmux_conf_theme_colour_15"
tmux_conf_theme_window_status_last_attr="none"

# status left/right sections separators
tmux_conf_theme_left_separator_main=""
tmux_conf_theme_left_separator_sub="|"
tmux_conf_theme_right_separator_main=""
tmux_conf_theme_right_separator_sub="|"
# tmux_conf_theme_left_separator_main="\uE0B0"  # /!\ you don't need to install Powerline
# tmux_conf_theme_left_separator_sub="\uE0B1"   #   you only need fonts patched with
# tmux_conf_theme_right_separator_main="\uE0B2" #   Powerline symbols or the standalone
# tmux_conf_theme_right_separator_sub="\uE0B3"  #   PowerlineSymbols.otf font, see README.md

# status left/right content:
#   - separate main sections with "|"
#   - separate subsections with ","
#   - built-in variables are:
#     - #{battery_bar}
#     - #{battery_hbar}
#     - #{battery_percentage}
#     - #{battery_status}
#     - #{battery_vbar}
#     - #{circled_session_name}
#     - #{hostname_ssh}
#     - #{hostname}
#     - #{hostname_full}
#     - #{hostname_full_ssh}
#     - #{loadavg}
#     - #{mouse}
#     - #{pairing}
#     - #{prefix}
#     - #{root}
#     - #{synchronized}
#     - #{uptime_y}
#     - #{uptime_d} (modulo 365 when #{uptime_y} is used)
#     - #{uptime_h}
#     - #{uptime_m}
#     - #{uptime_s}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_status_left=" ‚ùê #S "
tmux_conf_theme_status_right="#{pomodoro_status} #{prefix}#{mouse}#{pairing}#{synchronized} | ‚Üë#{?uptime_y, #{uptime_y}y,}#{?uptime_d, #{uptime_d}d,}#{?uptime_h, #{uptime_h}h,}#{?uptime_m, #{uptime_m}m,} | #{username}#{root} "

# status left style
tmux_conf_theme_status_left_fg="$tmux_conf_theme_colour_6,$tmux_conf_theme_colour_7,$tmux_conf_theme_colour_8"
tmux_conf_theme_status_left_bg="$tmux_conf_theme_colour_9,$tmux_conf_theme_colour_10,$tmux_conf_theme_colour_11"
tmux_conf_theme_status_left_attr="bold,none,none"

# status right style
tmux_conf_theme_status_right_fg="$tmux_conf_theme_colour_12,$tmux_conf_theme_colour_7,$tmux_conf_theme_colour_6"
tmux_conf_theme_status_right_bg="$tmux_conf_theme_colour_15,$tmux_conf_theme_colour_4,$tmux_conf_theme_colour_9"
tmux_conf_theme_status_right_attr="none,none,bold"

# pairing indicator
tmux_conf_theme_pairing="‚öá"                 # U+2687
tmux_conf_theme_pairing_fg="none"
tmux_conf_theme_pairing_bg="none"
tmux_conf_theme_pairing_attr="none"

# prefix indicator
tmux_conf_theme_prefix="‚å®"                  # U+2328
tmux_conf_theme_prefix_fg="none"
tmux_conf_theme_prefix_bg="none"
tmux_conf_theme_prefix_attr="none"

# mouse indicator
tmux_conf_theme_mouse="‚Üó"                   # U+2197
tmux_conf_theme_mouse_fg="none"
tmux_conf_theme_mouse_bg="none"
tmux_conf_theme_mouse_attr="none"

# root indicator
tmux_conf_theme_root="!"
tmux_conf_theme_root_fg="none"
tmux_conf_theme_root_bg="none"
tmux_conf_theme_root_attr="bold,blink"

# synchronized indicator
tmux_conf_theme_synchronized="‚öè"            # U+268F
tmux_conf_theme_synchronized_fg="none"
tmux_conf_theme_synchronized_bg="none"
tmux_conf_theme_synchronized_attr="none"

# battery bar symbols
tmux_conf_battery_bar_symbol_full="‚óº"
tmux_conf_battery_bar_symbol_empty="‚óª"
# tmux_conf_battery_bar_symbol_full="‚ô•"
# tmux_conf_battery_bar_symbol_empty="¬∑"

# battery bar length (in number of symbols), possible values are:
#   - auto
#   - a number, e.g. 5
tmux_conf_battery_bar_length="auto"

# battery bar palette, possible values are:
#   - gradient (default)
#   - heat
#   - "colour_full_fg,colour_empty_fg,colour_bg"
tmux_conf_battery_bar_palette="gradient"
#tmux_conf_battery_bar_palette="#d70000,#e4e4e4,#000000"   # red, white, black

# battery hbar palette, possible values are:
#   - gradient (default)
#   - heat
#   - "colour_low,colour_half,colour_full"
tmux_conf_battery_hbar_palette="gradient"
#tmux_conf_battery_hbar_palette="#d70000,#ff5f00,#5fff00"  # red, orange, green

# battery vbar palette, possible values are:
#   - gradient (default)
#   - heat
#   - "colour_low,colour_half,colour_full"
tmux_conf_battery_vbar_palette="gradient"
#tmux_conf_battery_vbar_palette="#d70000,#ff5f00,#5fff00"  # red, orange, green

# symbols used to indicate whether battery is charging or discharging
# tmux_conf_battery_status_charging="‚Üë"       # U+2191
# tmux_conf_battery_status_discharging="‚Üì"    # U+2193
tmux_conf_battery_status_charging="üîå"     # U+1F50C
tmux_conf_battery_status_discharging="üîã"  # U+1F50B

# clock style (when you hit <prefix> + t)
# you may want to use %I:%M %p in place of %R in tmux_conf_theme_status_right
tmux_conf_theme_clock_colour="$tmux_conf_theme_colour_5"
tmux_conf_theme_clock_style="12"

# -- clipboard -----------------------------------------------------------------

# in copy mode, copying selection also copies to the OS clipboard
#   - true
#   - false (default)
# on macOS, this requires installing reattach-to-user-namespace, see README.md
# on Linux, this requires xsel or xclip
tmux_conf_copy_to_os_clipboard=true

# -- user customizations -------------------------------------------------------
# this is the place to override or undo settings

# increase history size
set -g history-limit 10000

# start with mouse mode enabled
set -g mouse on

# force Vi mode
#   really you should export VISUAL or EDITOR environment variable, see manual
#set -g status-keys vi
#set -g mode-keys vi

# replace C-b by C-a instead of using both prefixes
# set -gu prefix2
# unbind C-a
# unbind C-b
# set -g prefix C-a
# bind C-a send-prefix

# move status line to top
set -g status-position top

# -- tpm -----------------------------------------------------------------------

# while I don't use tpm myself, many people requested official support so here
# is a seamless integration that automatically installs plugins in parallel

# whenever a plugin introduces a variable to be used in 'status-left' or
# 'status-right', you can use it in 'tmux_conf_theme_status_left' and
# 'tmux_conf_theme_status_right' variables.

# by default, launching tmux will update tpm and all plugins
#   - true (default)
#   - false
tmux_conf_update_plugins_on_launch=false

# by default, reloading the configuration will update tpm and all plugins
#   - true (default)
#   - false
tmux_conf_update_plugins_on_reload=true

# /!\ do not add set -g @plugin 'tmux-plugins/tpm'
# /!\ do not add run '~/.tmux/plugins/tpm/tpm'

# to enable a plugin, use the 'set -g @plugin' syntax:
# visit https://github.com/tmux-plugins for available plugins
#set -g @plugin 'tmux-plugins/tmux-copycat'
#set -g @plugin 'tmux-plugins/tmux-cpu'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @continuum-restore 'on'

# -- custom variables ----------------------------------------------------------

# to define a custom #{foo} variable, define a POSIX shell function between the
# '# EOF' and the '# "$@"' lines. Please note that the opening brace { character
# must be on the same line as the function name otherwise the parse won't detect
# it.
#
# then, use #{foo} in e.g. the 'tmux_conf_theme_status_left' or the
# 'tmux_conf_theme_status_right' variables.

# # /!\ do not remove the following line
# EOF
#
# weather() {
#   curl -m 1 wttr.in?format=3 2>/dev/null
#   sleep 900 # sleep for 15 minutes, throttle network requests whatever the value of status-interval
# }
#
# online() {
#   ping -t 1 -c 1 1.1.1.1 >/dev/null 2>&1 && printf '‚úî' || printf '‚úò'
# }
#
# "$@"
# # /!\ do not remove the previous line

#-------------------------------------------------------------------------------
#  NOTE: 1. SETTINGS {{{
# General behavior, appearance, and environment settings for tmux.
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# --- NOTE: Main Settings {{{
#-------------------------------------------------------------------------------

# Set the prefix to C-a, which is more accessible than C-b.
set -g prefix C-a

# Unbind the default C-b prefix.
unbind C-b

# Allow sending C-a to applications by pressing it twice.
bind C-a send-prefix

# Reduce escape key delay for faster responsiveness, especially in Vim/Neovim.
set -g escape-time 0

# Start window numbering at 1 instead of 0.
set-option -g base-index 1

# Automatically renumber windows after one is closed.
set-option -g renumber-windows on

# Use vi keybindings in copy mode.
setw -g mode-keys vi

# Set Zsh as the default shell for new windows and panes.
set -g default-command "exec /bin/zsh"

# Do not exit tmux when the last session is closed.
set -g detach-on-destroy off

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# --- NOTE: Terminal & Colors {{{
#-------------------------------------------------------------------------------

# Enable True Color support for modern terminals.
set-option -sa terminal-overrides ",xterm*:Tc"

# Set the default terminal type for tmux itself.
set -g default-terminal "tmux-256color"

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# --- NOTE: Transparency {{{
#-------------------------------------------------------------------------------

# Allow for a transparent background if the terminal emulator supports it.
set-option -g pane-border-style bg=default
set-option -g window-style bg=default
set-option -g window-active-style bg=default

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
#  NOTE: 2. PLUGINS {{{
#-------------------------------------------------------------------------------

# Managed by TPM (Tmux Plugin Manager).

#-------------------------------------------------------------------------------
# --- NOTE: Themes (enable one) {{{
#-------------------------------------------------------------------------------

# set -g @plugin 'dracula/tmux'
# set -g @plugin "nordtheme/tmux"
# set -g @plugin 'catppuccin/tmux'
# set -g @catppuccin_flavour 'mocha'
# set -g @plugin 'rose-pine/tmux'
# set -g @rose_pine_variant 'main'
# set -g @plugin 'khanghh/tmux-dark-plus-theme'

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# --- NOTE: Pomodoro Timer {{{
#-------------------------------------------------------------------------------
set -g @plugin 'olimorris/tmux-pomodoro-plus'

# Set pomodoro duration to 25 minutes.
set -g @pomodoro_mins 25

# Set break duration to 5 minutes.
set -g @pomodoro_break_mins 5

# Automatically repeat the pomodoro cycle.
set -g @pomodoro_repeat true

# Enable desktop notifications.
set -g @pomodoro_notifications 'on'

# Enable sound notifications.
set -g @pomodoro_sound 'on'

# Use a more granular (per-second) countdown.
set -g @pomodoro_granularity 'on'

# Update the status bar every second for the timer.
set -g status-interval 1

# Set custom icons for different pomodoro states.
set -g @pomodoro_on " üçÖ "
set -g @pomodoro_complete " ‚úîÔ∏é  "
set -g @pomodoro_pause " ‚è∏Ô∏é  "

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# --- NOTE: Core & Utility Plugins {{{
#-------------------------------------------------------------------------------

# Load sensible default settings that most users agree on.
set -g @plugin 'tmux-plugins/tmux-sensible'

# Provides better, more intuitive mouse support.
set -g @plugin 'nhdaly/tmux-better-mouse-mode'

# Provides hints to search and jump to text matches.
set -g @plugin 'tmux-plugins/tmux-copycat'

# Vim-style Easymotion-like navigation for jumping to text.
set -g @plugin 'schasse/tmux-jump'

# Provides a better way to yank (copy) text to the system clipboard.
set -g @plugin 'tmux-plugins/tmux-yank'

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# --- NOTE: FZF Links Opener (Cross-Platform) {{{
#-------------------------------------------------------------------------------

set -g @plugin 'alberti42/tmux-fzf-links'

# Set the keybinding to open the file/link finder.
set-option -g @fzf-links-key "O"

# Dynamically find the python3 executable. `command -v` searches your $PATH.
# This works on both macOS (finding the brew version) and Linux.
set-option -g @fzf-links-python "$(command -v python3)"

# Dynamically find the path to nvim and use it in the open command.
set-option -g @fzf-links-editor-open-cmd "tmux new-window -n 'nvim' $(command -v nvim) +%line '%file'"

# Use if-shell to detect the OS and set the correct browser opener command.
# `uname -s` returns "Darwin" for macOS and "Linux" for Linux.
if-shell "uname -s | grep -q Darwin" \
    "set-option -g @fzf-links-browser-open-cmd \"open '%url'\"" \
    "set-option -g @fzf-links-browser-open-cmd \"xdg-open '%url'\""

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# --- NOTE: Floax (Floating Panes) {{{
#-------------------------------------------------------------------------------

set -g @plugin 'omerxx/tmux-floax'

# Set the keybinding to toggle a floating pane.
set -g @floax-bind 'C-\'
set -g @floax-width '85%'
set -g @floax-height '85%'

# Set the border color for floating panes.
set -g @floax-border-color '#00AAFF'
set -g @floax-text-color '#FFC600'

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
#  NOTE: 3. KEYBINDINGS {{{
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# --- NOTE: Global Bindings (No Prefix) {{{
#           For bindings that work everywhere without the tmux prefix.
#-------------------------------------------------------------------------------

# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"

# Navigate left.
bind -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'

# Navigate down.
bind -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'

# Navigate up.
bind -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'

# Navigate right.
bind -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# --- NOTE: Custom Mode Trigger {{{
#           Enter a custom 'layout-mode' by pressing C-b (without prefix).
#-------------------------------------------------------------------------------
bind -T root C-b switch-client -T layout-mode
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# --- NOTE: Prefix Mode Bindings (C-a) {{{
#           All bindings that are triggered after pressing the prefix key.
#-------------------------------------------------------------------------------

# Create a new window in the same directory as the current pane.
bind c new-window -c '#{pane_current_path}'

# Split the current pane horizontally.
bind '-' split-window -v -c '#{pane_current_path}'

# Split the current pane vertically.
bind '\' split-window -h -c '#{pane_current_path}'

# Kill the current pane without confirmation.
bind x kill-pane

# Move the current pane to its own new window.
bind n break-pane -d

# Prompt to join a pane from another window/session.
bind j command-prompt -p "join pane from: "  "join-pane -h -s '%%'"

# Prompt to swap the current pane with another.
bind q display-panes\; command-prompt -p "pane #: "  "swap-pane -t '%%'"

# Kill the entire current session.
bind K run-shell 'tmux switch-client -n \; kill-session -t "$(tmux display-message -p "#S")" || tmux kill-session'

# Launch the git helper script in a popup.
bind-key -r ? run-shell -b 'tmux run-shell "~/.config/tmux/scripts/search-keybindings.sh"'

# Launch the git helper script in a popup.
bind g display-popup -w 60% -h 70% -E "~/.config/tmux/scripts/git-pull-merge.sh"

# Launch the cht.sh helper script in a popup.
bind i display-popup -w 85% -h 85% -E "~/.config/tmux/scripts/cht-sh/cht.sh"

# Bind 'n' to open the notes manager with a context prompt.
bind a display-popup -w 85% -h 85% -E "zsh -l -c '~/.config/tmux/scripts/second-brain.sh notes personal'"
bind A display-popup -w 85% -h 85% -E "zsh -l -c '~/.config/tmux/scripts/second-brain.sh notes work'"

# Bind 'm' to open the scratchpad manager with a context prompt.
bind m display-popup -w 85% -h 85% -E "zsh -l -c '~/.config/tmux/scripts/second-brain.sh scratch personal'"
bind M display-popup -w 85% -h 85% -E "zsh -l -c '~/.config/tmux/scripts/second-brain.sh scratch work'"

# Bind 't' to open the daily todos with a context prompt.
bind t display-popup -w 85% -h 85% -E "zsh -l -c '~/.config/tmux/scripts/second-brain.sh todos personal'"
bind T display-popup -w 85% -h 85% -E "zsh -l -c '~/.config/tmux/scripts/second-brain.sh todos work'"


# Launch the scratchpad popup script.
bind m run-shell "~/.config/tmux/scripts/scratch-popup.sh"

# Launch a script for session management (e.g., tmux-sessionizer).
bind N run-shell "tmux neww ~/.config/tmux/scripts/tmux-sessionizer.sh"

# Launch a script for tmuxinator session management.
bind U run-shell "tmux neww ~/.config/tmux/scripts/tmuxinator-sessionizer.sh"

#-------------------------------------------------------------------------------
# NOTE: sesh keybindings {{{
#-------------------------------------------------------------------------------

# Launch fzf-based sesh script.
bind "o" run-shell "~/.config/tmux/scripts/sesh/fzf.sh"

# Launch gum-based sesh script in a popup.
bind "C-o" display-popup -E -w 50% "~/.config/tmux/scripts/sesh/gum.sh"

# Connect to the last session.
bind "S" run-shell "sesh last"

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

# --- Project Runner ---
# An fzf-based script to run package.json commands.
bind C-r display-popup -w 90% -h 90% -E "zsh -l -c '~/.config/tmux/scripts/runner.sh'"

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# --- NOTE: Layout Mode Bindings (C-b) {{{
#           All bindings that work after pressing C-b (without prefix).
#-------------------------------------------------------------------------------

# Toggle the status bar on/off.
bind -T layout-mode C-b set-option status

# Split window horizontally.
bind -T layout-mode '"' splitw -d

# Split window vertically.
bind -T layout-mode % splitw -hd

# Kill the bottom-most pane.
bind -T layout-mode q kill-pane -t '#{bottom}'

# Split with a 40% horizontal pane to the left.
bind -T layout-mode h splitw -hbp 40

# Split with a 40% horizontal pane to the right.
bind -T layout-mode l splitw -hp 40

# Split with a 30% vertical pane below.
bind -T layout-mode j splitw -p 30

# Split with a 30% vertical pane above.
bind -T layout-mode k splitw -bp 30

# Launch a script to search lines in files and open in editor.
bind -T layout-mode C-o run-shell "tmux neww tsnv"

#-------------------------------------------------------------------------------
# --- NOTE: Unified Ask/Search Popup {{{
#-------------------------------------------------------------------------------

# A set of keybindings that use a single script to perform different actions.
# The script path is hardcoded to ensure compatibility.

# Bind 'a' to ask the AI.
bind -T layout-mode a display-popup -w 85% -h 85% -E "zsh -l -c '~/.config/tmux/scripts/ask-sh/ask.sh ai'"

# Bind 'c' to start an interactive AI chat session.
bind -T layout-mode c display-popup -w 80% -h 70% -E "zsh -l -c '~/.config/tmux/scripts/ask-sh/ask.sh ai-chat'"

# Bind 's' to perform a site-specific search.
bind -T layout-mode s display-popup -w 85% -h 85% -E "zsh -l -c '~/.config/tmux/scripts/ask-sh/ask.sh site'"

# Bind '/' to perform a general web search.
bind -T layout-mode / display-popup -w 85% -h 85% -E "zsh -l -c '~/.config/tmux/scripts/ask-sh/ask.sh search'"

# Bind 'd' for a "Ducky" search (opens top result in browser).
bind -T layout-mode d display-popup -w 85% -h 85% -E "zsh -l -c '~/.config/tmux/scripts/ask-sh/ask.sh ducky'"

# Bind 'b' for a browser !bang search.
bind -T layout-mode b display-popup -w 85% -h 85% -E "zsh -l -c '~/.config/tmux/scripts/ask-sh/ask.sh bang'"

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# NOTE: todo toggle {{{
#-------------------------------------------------------------------------------

# Toggle daily Personal todo in a Neovim popup (explicitly personal)
bind -T layout-mode t run-shell "~/.config/tmux/scripts/todo.sh personal"

# Toggle daily Work todo in a Neovim popup
bind -T layout-mode T run-shell "~/.config/tmux/scripts/todo.sh work"

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

# # Open the tmux man page in a new window.
# bind -T layout-mode t new-window 'man tmux'

# --- Unified Documentation Browser ---
# Replaces the old 'man' bindings with a single, powerful fzf-based script.
# This binding should be in your 'layout-mode' or 'prefix' table as you prefer.
bind -T layout-mode m display-popup -w 90% -h 90% -E "~/.config/tmux/scripts/doc-finder.sh"
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# --- NOTE: Copy Mode Bindings {{{
#-------------------------------------------------------------------------------
# Custom pane navigation while in vi copy mode.
bind -T copy-mode-vi 'C-h' select-pane -L
bind -T copy-mode-vi 'C-j' select-pane -D
bind -T copy-mode-vi 'C-k' select-pane -U
bind -T copy-mode-vi 'C-l' select-pane -R
# }}}
#-------------------------------------------------------------------------------

#-------------------------------------------------------------------------------
# }}}
#-------------------------------------------------------------------------------

# vim:fdm=marker
